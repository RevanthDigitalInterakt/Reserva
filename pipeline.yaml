trigger:
  branches:
    include:
      - feat/onesignal-updated-v3

pr: none

variables:
  - group: mobile-variable-group

pool: 
  name: Reserva_Pool_Mac
  demands:
  - agent.name -equals mac_agent_m1

steps:
- checkout: self
  persistCredentials: true
  clean: true

- task: NodeTool@0
  inputs:
    versionSpec: '20.9.0'
  displayName: 'Install Node.js'

- script: |
    brew install cocoapods
  displayName: 'Install Cocoapods'
  workingDirectory: $(Build.SourcesDirectory)

- script: |
    yarn
  displayName: 'Install dependencies'
  workingDirectory: $(Build.SourcesDirectory)

- task: DownloadSecureFile@1
  name: apiKeyFileIOS
  inputs:
    secureFile: 'fastlane_DD8P34TT2Q.json'
    
- task: DownloadSecureFile@1
  name: apiKeyFileAndroid
  inputs:
    secureFile: 'play-store-credentials.json'

- script: |
    cd ios && pod install
  displayName: 'Install CocoaPods dependencies'
  workingDirectory: $(Build.SourcesDirectory)

- script: |
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
    export ANDROID_HOME=/Users/ec2-user/Library/Android/sdk
    export PATH=$PATH:$ANDROID_HOME/emulator
    export PATH=$PATH:$ANDROID_HOME/tools
    export PATH=$PATH:$ANDROID_HOME/tools/bin
    export PATH=$PATH:$ANDROID_HOME/platform-tools
    export ANDROID_NDK_HOME=$HOME/Library/Android/sdk/ndk-bundle
    export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"
  displayName: 'Set envs'

- script: |
    yarn pipeline:semantic-release-pre:prod
  displayName: 'Increment version'
  workingDirectory: $(Build.SourcesDirectory)

# Build iOS
#- script: |
#    fastlane ios beta api_key_path:$(apiKeyFileIOS.secureFilePath)
#  displayName: 'Deploy to TestFlight'
#  workingDirectory: ios

# Build Android
- script: |
    export ANDROID_HOME=/Users/ec2-user/Library/Android/sdk
    fastlane android beta api_key_path:$(apiKeyFileAndroid.secureFilePath)
  displayName: 'Deploy to Play Store Beta'
  workingDirectory: android

- script: |
    yarn pipeline:semantic-release-post:prod
  displayName: 'Commit version'
  workingDirectory: $(Build.SourcesDirectory)